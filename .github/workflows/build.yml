name: Build Matrix

on:
  pull_request:
  push:

jobs:
  linux-build:
    strategy:
      matrix:
        config: [Debug]
        compiler: [clang]
        os: [ubuntu-latest]

    name: Ubuntu with ${{ matrix.compiler }} (${{ matrix.config }})
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: "Install"
      uses: awalsh128/cache-apt-pkgs-action@v1.3.1
      with:
        packages: git build-essential clang cmake libgl1-mesa-dev libxrandr-dev libxinerama-dev libxcursor-dev libxi-dev
        version: 1.0

    - name: Set compiler
      run: |
        echo "CC=${{ matrix.compiler == 'gcc' && 'gcc' || 'clang-15'   }}" >> $GITHUB_ENV
        echo "CXX=${{ matrix.compiler == 'gcc' && 'g++' || 'clang++-15' }}" >> $GITHUB_ENV

    - name: Configure Build Files
      run: |
        cmake -DCMAKE_BUILD_TYPE=${{ matrix.config }} -B build

    - name: Build Project Alice
      run: |
        cmake --build build --parallel --target Alice

    - name: Build Project Alice Incremental
      run: |
        cmake --build build --parallel --target AliceIncremental

  windows-build:
    strategy:
      matrix:
        config: [debug-windows]
    runs-on: [windows-latest]
    name: Windows (${{ matrix.config }})
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Configure Build Files
      run: |
        cmake -G "Visual Studio 17 2022" --preset=x64-${{ matrix.config }} -B build

    - name: Build Project Alice
      run: |
        cmake --build build --parallel --target Alice

    - name: Build Project Alice Incremental
      run: |
        cmake --build build --parallel --target AliceIncremental

  build-check:
    needs: [windows-build, linux-build]
    runs-on: ubuntu-latest
    name: Build Matrix
    steps:
      - name: Check
        run: |
          echo success
